{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/atividades facul/web2/atividade aula 13/lista-computadores/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ComputadoresList from './computadoresList';\nimport AdicionarComputador from './AdicionarComputador';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [computadores, setComputadores] = useState([]);\n\n  // Carrega os computadores do arquivo JSON quando o componente é montado\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/computadores.json');\n      const data = await response.json();\n      setComputadores(data);\n    };\n    fetchData();\n  }, []);\n\n  // Salva os computadores no arquivo JSON\n  const salvarComputadores = async () => {\n    try {\n      await fetch('/computadores.json', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(computadores)\n      });\n    } catch (error) {\n      console.error('Erro ao salvar os computadores:', error);\n    }\n  };\n  const handleAdicionarComputador = novoComputador => {\n    setComputadores([...computadores, novoComputador]);\n    salvarComputadores(); // Salva os dados após adicionar um novo computador\n  };\n  const handleDeletarComputador = computadorParaDeletar => {\n    const novaLista = computadores.filter(computador => computador.hostname !== computadorParaDeletar.hostname);\n    setComputadores(novaLista);\n    salvarComputadores(); // Salva os dados após deletar um computador\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gerenciador de Computadores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(AdicionarComputador, {\n        onAdicionar: handleAdicionarComputador\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComputadoresList, {\n        computadores: computadores,\n        onDelete: handleDeletarComputador\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pwwPbV3g0AZ+Td3Nw3JSF5YCSO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ComputadoresList","AdicionarComputador","jsxDEV","_jsxDEV","App","_s","computadores","setComputadores","fetchData","response","fetch","data","json","salvarComputadores","method","headers","body","JSON","stringify","error","console","handleAdicionarComputador","novoComputador","handleDeletarComputador","computadorParaDeletar","novaLista","filter","computador","hostname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdicionar","onDelete","_c","$RefreshReg$"],"sources":["/home/leonardo/Documentos/atividades facul/web2/atividade aula 13/lista-computadores/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ComputadoresList from './computadoresList';\nimport AdicionarComputador from './AdicionarComputador';\n\nfunction App() {\n  const [computadores, setComputadores] = useState([]);\n\n  // Carrega os computadores do arquivo JSON quando o componente é montado\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/computadores.json');\n      const data = await response.json();\n      setComputadores(data);\n    };\n\n    fetchData();\n  }, []);\n\n  // Salva os computadores no arquivo JSON\n  const salvarComputadores = async () => {\n    try {\n      await fetch('/computadores.json', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(computadores),\n      });\n    } catch (error) {\n      console.error('Erro ao salvar os computadores:', error);\n    }\n  };\n\n  const handleAdicionarComputador = (novoComputador) => {\n    setComputadores([...computadores, novoComputador]);\n    salvarComputadores(); // Salva os dados após adicionar um novo computador\n  };\n\n  const handleDeletarComputador = (computadorParaDeletar) => {\n    const novaLista = computadores.filter(computador => computador.hostname !== computadorParaDeletar.hostname);\n    setComputadores(novaLista);\n    salvarComputadores(); // Salva os dados após deletar um computador\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Gerenciador de Computadores</h1>\n      </header>\n      <main>\n        <AdicionarComputador onAdicionar={handleAdicionarComputador} />\n        <ComputadoresList computadores={computadores} onDelete={handleDeletarComputador} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;MAClD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,eAAe,CAACI,IAAI,CAAC;IACvB,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMH,KAAK,CAAC,oBAAoB,EAAE;QAChCI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,YAAY;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAME,yBAAyB,GAAIC,cAAc,IAAK;IACpDf,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEgB,cAAc,CAAC,CAAC;IAClDT,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMU,uBAAuB,GAAIC,qBAAqB,IAAK;IACzD,MAAMC,SAAS,GAAGnB,YAAY,CAACoB,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,QAAQ,KAAKJ,qBAAqB,CAACI,QAAQ,CAAC;IAC3GrB,eAAe,CAACkB,SAAS,CAAC;IAC1BZ,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEV,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA;MAAQ0B,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5B3B,OAAA;QAAA2B,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACT/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA,CAACF,mBAAmB;QAACkC,WAAW,EAAEd;MAA0B;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/D/B,OAAA,CAACH,gBAAgB;QAACM,YAAY,EAAEA,YAAa;QAAC8B,QAAQ,EAAEb;MAAwB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC7B,EAAA,CAnDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}